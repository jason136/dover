(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[1],{

/***/ "./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/*! exports provided: setup, main */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setup\", function() { return setup; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"main\", function() { return main; });\nclass Chart {}\r\nlet euler = () => {};\r\nlet runge_kutta = () => {};\r\n\r\nconst canvas = document.getElementById(\"canvas\");\r\nconst status = document.getElementById(\"status\");\r\nconst error = document.getElementById(\"error\");\r\nlet chart;\r\n\r\nconst form = document.getElementById('form');\r\n\r\nfunction setup(WasmChart, WasmEuler, WasmRK) {\r\n    Chart = WasmChart;\r\n    euler = WasmEuler;\r\n    runge_kutta = WasmRK;\r\n}\r\n\r\nfunction setupCanvas() {\r\n    const aspectRatio = canvas.width / canvas.height;\r\n    const size = canvas.parentNode.offsetWidth * 0.7;\r\n    canvas.style.width = size + \"px\";\r\n    canvas.style.height = size / aspectRatio + \"px\";\r\n    canvas.width = size;\r\n    canvas.height = size / aspectRatio;\r\n    chart.draw();\r\n}\r\n\r\nfunction plot(event) {\r\n    event.preventDefault();\r\n\r\n    const formData = new FormData(form);\r\n    const formDataObj = Object.fromEntries(formData.entries());\r\n\r\n    status.innerText = `Rendering...`;\r\n    const start = performance.now();\r\n    const expectedLen = formDataObj.t_final / formDataObj.delta_t;\r\n    let len;\r\n    \r\n    if (event.target.id == 'euler') {\r\n        len = euler(\r\n            chart, \r\n            formDataObj.dxdt, \r\n            formDataObj.dydt,\r\n            formDataObj.x_initial,\r\n            formDataObj.y_initial,\r\n            0.0, \r\n            formDataObj.delta_t,\r\n            formDataObj.t_final,\r\n        );\r\n    }\r\n    else if (event.target.id == 'rk') {\r\n        len = runge_kutta(\r\n            chart, \r\n            formDataObj.dxdt, \r\n            formDataObj.dydt,\r\n            formDataObj.x_initial,\r\n            formDataObj.y_initial,\r\n            0.0, \r\n            formDataObj.delta_t,\r\n            formDataObj.t_final,\r\n        );\r\n    }\r\n\r\n    if (len != expectedLen) {\r\n        error.innerText = `Error: f64 overflow after ${len} iterations`;\r\n    }\r\n    else {\r\n        error.innerText = '';\r\n    }\r\n\r\n    chart.generate_bounds();\r\n    chart.draw();\r\n    const end = performance.now();\r\n    status.innerText = `Rendered ${len} datapoints in ${Math.ceil(end - start)}ms`;\r\n    document.getElementById (\"download\").innerText = `Download (~${len * 50 / 1000000} mb)`;\r\n}\r\n\r\nfunction main() {\r\n    chart = Chart.new(canvas);\r\n    document.getElementById(\"dxdt\").value = \"10*x-x*y\";\r\n    document.getElementById(\"dydt\").value = \"-1*y+x*y\";\r\n    document.getElementById(\"x_initial\").value = \"20\";\r\n    document.getElementById(\"y_initial\").value = \"5\";\r\n    document.getElementById(\"delta_t\").value = \"0.001\";\r\n    document.getElementById(\"t_final\").value = \"50\";\r\n\r\n    status.innerText = \"WebAssembly loaded!\";\r\n    setupCanvas();\r\n    window.addEventListener(\"resize\", setupCanvas);\r\n\r\n    document.getElementById (\"euler\").addEventListener('click', plot);\r\n    document.getElementById (\"rk\").addEventListener('click', plot);\r\n    \r\n    document.getElementById (\"in\").addEventListener('click', () => {\r\n        chart.adjust_bounds(-0.1, -0.1, -0.1, -0.1);\r\n        chart.draw();\r\n    });\r\n    document.getElementById (\"out\").addEventListener('click', () => {\r\n        chart.adjust_bounds(0.1, 0.1, 0.1, 0.1);\r\n        chart.draw();\r\n    });\r\n    document.getElementById (\"left\").addEventListener('click', () => {\r\n        chart.adjust_bounds(0.2, -0.2, 0.0, 0.0);\r\n        chart.draw();\r\n    });\r\n    document.getElementById (\"right\").addEventListener('click', () => {\r\n        chart.adjust_bounds(-0.2, 0.2, 0.0, 0.0);\r\n        chart.draw();\r\n    });\r\n    document.getElementById (\"up\").addEventListener('click', () => {\r\n        chart.adjust_bounds(0.0, 0.0, 0.2, -0.2);\r\n        chart.draw();\r\n    });\r\n    document.getElementById (\"down\").addEventListener('click', () => {\r\n        chart.adjust_bounds(0.0, 0.0, -0.2, 0.2);\r\n        chart.draw();\r\n    });\r\n    document.getElementById (\"stretchX\").addEventListener('click', () => {\r\n        chart.adjust_bounds(-0.1, -0.1, 0.0, 0.0);\r\n        chart.draw();\r\n    });\r\n    document.getElementById (\"stretchY\").addEventListener('click', () => {\r\n        chart.adjust_bounds(0.0, 0.0, -0.1, -0.1);\r\n        chart.draw();\r\n    });\r\n    document.getElementById (\"shrinkX\").addEventListener('click', () => {\r\n        chart.adjust_bounds(0.1, 0.1, 0.0, 0.0);\r\n        chart.draw();\r\n    });\r\n    document.getElementById (\"shrinkY\").addEventListener('click', () => {\r\n        chart.adjust_bounds(0.0, 0.0, 0.1, 0.1);\r\n        chart.draw();\r\n    });\r\n    \r\n    document.getElementById (\"points\").addEventListener('click', () => {\r\n        const points = Array.from(chart.get_points());\r\n\r\n        let w = window.open(\"\");\r\n        w.document.write(`\r\n            <table style=\"width:50%\">\r\n            <tr>\r\n                <td>T</td>\r\n                <td>X</td>\r\n                <td>Y</td>\r\n            </tr>\r\n        `);\r\n        while (points.length > 0) {\r\n            const t = points.shift();\r\n            const x = points.shift();\r\n            const y = points.shift();\r\n            w.document.write(`\r\n                <tr>\r\n                    <td>${t}</td>\r\n                    <td>${x}</td>\r\n                    <td>${y}</td>\r\n                </tr>\r\n            `);\r\n        }\r\n        w.document.write(\"</table>\");\r\n    });\r\n    document.getElementById (\"download\").addEventListener('click', () => {\r\n        const points = Array.from(chart.get_points());\r\n        let csvContent = \"data:text/csv;charset=utf-8,\";\r\n\r\n        csvContent += \"T,X,Y\\r\\n\";\r\n        for (let i = 0; i < points.length; i += 3) {\r\n            const t = points[i];\r\n            const x = points[i+1];\r\n            const y = points[i+2];\r\n            csvContent += `${t},${x},${y}\\r\\n`;\r\n        }\r\n\r\n        let encodedUri = encodeURI(csvContent);\r\n        let link = document.createElement(\"a\");\r\n        link.setAttribute(\"href\", encodedUri);\r\n        link.setAttribute(\"download\", \"points.csv\");\r\n        document.body.appendChild(link);\r\n        link.click();\r\n    });\r\n}\n\n//# sourceURL=webpack:///./index.js?");

/***/ })

}]);